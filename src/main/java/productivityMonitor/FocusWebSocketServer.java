package productivityMonitor;

import org.java_websocket.server.WebSocketServer;
import org.java_websocket.handshake.ClientHandshake;
import org.java_websocket.WebSocket;
import com.google.gson.Gson;

import java.net.InetSocketAddress;
import java.util.*;

public class FocusWebSocketServer extends WebSocketServer {

    private final Set<String> blacklist = new HashSet<>();
    private final Gson gson = new Gson();

    public FocusWebSocketServer(int port) {
        super(new InetSocketAddress(port));
    }

    @Override
    public void onOpen(WebSocket conn, ClientHandshake handshake) {
        System.out.println("üîå –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–∏–ª–æ—Å—å");
        sendBlacklist(conn);
    }

    @Override
    public void onMessage(WebSocket conn, String message) {
        System.out.println("üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: " + message);
    }

    public void sendBlacklist(WebSocket conn) {
        Map<String, Object> msg = new HashMap<>();
        msg.put("type", "update_blacklist");
        msg.put("urls", blacklist);

        conn.send(gson.toJson(msg));
    }

    public void broadcastBlacklist() {
        for (WebSocket conn : getConnections()) {
            sendBlacklist(conn);
        }
    }

    public void addToBlacklist(String domain) {
        blacklist.add(domain);
        broadcastBlacklist();
        System.out.println("üõë –î–æ–±–∞–≤–ª–µ–Ω –≤ blacklist: " + domain);
    }

    public static void main(String[] args) throws Exception {
        FocusWebSocketServer server = new FocusWebSocketServer(8081);
        server.start();
        System.out.println("üü¢ WebSocket-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ ws://localhost:8081");

        // –ß–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –¥–æ–±–∞–≤–∏–º —Å–∞–π—Ç –≤ blacklist
        new Timer().schedule(new TimerTask() {
            public void run() {
            }
        }, 10000);
    }

    @Override
    public void onClose(WebSocket conn, int code, String reason, boolean remote) {
        System.out.println("üîå –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–∏–ª–æ—Å—å: " + conn.getRemoteSocketAddress() + " –ø–æ –ø—Ä–∏—á–∏–Ω–µ: " + reason);
    }

    @Override
    public void onError(WebSocket conn, Exception ex) {
        System.out.println("‚ùå –û—à–∏–±–∫–∞ WebSocket-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: " + ex.getMessage());
        if (conn != null) {
            // –ú–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        }
    }

    @Override
    public void onStart() {
        System.out.println("üöÄ –°–µ—Ä–≤–µ—Ä WebSocket –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
    }
}

